// add rest.li's gradle plugins so they can be used throughout project
buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath 'com.linkedin.pegasus:gradle-plugins:'+pegasusVersion
  }
}

plugins {
    id "org.shipkit.java" version "2.0.31"
}
//task wrapper(type: Wrapper) {
//  gradleVersion = '2.12'
//}

//Applying default build logic for an OS build:
apply from: "defaultEnvironment.gradle"

group = "com.linkedin.restli-testsuite"

ext.restliSpec = [
    'product' : [
        'pegasus' : [
            'data' : 'com.linkedin.pegasus:data:'+pegasusVersion,
            'generator' : 'com.linkedin.pegasus:generator:'+pegasusVersion,
            'r2Netty' : 'com.linkedin.pegasus:r2-netty:'+pegasusVersion,
            'restliCommon' : 'com.linkedin.pegasus:restli-common:' + pegasusVersion,
            'restliClient' : 'com.linkedin.pegasus:restli-client:'+pegasusVersion,
            'restliServer' : 'com.linkedin.pegasus:restli-server:'+pegasusVersion,
            'restliTools' : 'com.linkedin.pegasus:restli-tools:'+pegasusVersion,
            'gradlePlugins' : 'com.linkedin.pegasus:gradle-plugins:'+pegasusVersion,
            'restliNettyStandalone' : 'com.linkedin.pegasus:restli-netty-standalone:'+pegasusVersion,
            'restliServerStandalone' : 'com.linkedin.pegasus:restli-server-standalone:'+pegasusVersion,
            'restliSpringBridge' : 'com.linkedin.pegasus:restli-spring-bridge:'+pegasusVersion
        ]
    ]
]

ext.externalDependency = [
    'commonsIo': 'commons-io:commons-io:1.4',
    'testng': 'org.testng:testng:6.4'
]

allprojects {
  apply plugin: 'idea'
  apply plugin: 'eclipse'
}

subprojects {
  apply plugin: 'maven'

  afterEvaluate {
    // add the standard pegasus dependencies wherever the plugin is used
    if (project.plugins.hasPlugin('pegasus')) {
      dependencies {
        dataTemplateCompile restliSpec.product.pegasus.data
        restClientCompile restliSpec.product.pegasus.restliClient
      }
    }
  }

  repositories {
    mavenLocal()
  }
}
